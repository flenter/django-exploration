---
box: wercker/python
services:
  - mies/postgis@0.0.5

# Build definition
build:
  # The steps that will be executed on build
  steps:
    - script:
        name: Enable virtual display
        code: |-
          # Start xvfb which gives the context an virtual display
          # which is required for tests that require an GUI
          export DISPLAY=:99.0
          start-stop-daemon --start --quiet --pidfile /tmp/xvfb_99.pid --make-pidfile --background --exec /usr/bin/Xvfb -- :99 -screen 0 1024x768x24 -ac +extension GLX +render -noreset
          # Give xvfb time to start. 3 seconds is the default for all xvfb-run commands.
          sleep 3
    - script:
        name: Check environment variables...
        code: |
          export WERCKER_POSTGRESQL_URL="postgis://postgres:wercker@$WERCKER_POSTGRESQL_HOST:5432/werckerdb1"

    - install-packages:
        packages: postgresql-client-9.3 postgis

    #- virtualenv #:
        # python_location: /usr/bin/python3.2
    - pip-install
    - script:
        name: show python info
        code: |
          python --version
    - script:
        name: run django tests
        code: |
          pip --version  
          python manage.py test --liveserver=localhost:8082
    # - script:
    #     name: fail
    #     code: |
    #         fail "now"
  # after-steps:
  #   - sherzberg/slack-notify:
  #       token: $SLACK_TOKEN
  #       subdomain: "wercker"
  #       channel: "general"
deploy:
  steps:
    - add-to-known_hosts:
        hostname: $TARGET_MACHINE

    - mktemp:
        envvar: PRIVATEKEY_PATH
    - create-file:
        name: write key
        filename: $PRIVATEKEY_PATH
        content: $PEM_FILE_CONTENT
        overwrite: true
    - create-file:
        name: write key key.pem
        filename: /home/ubuntu/key.pem
        content: $PEM_FILE_CONTENT
        overwrite: true
    - pip-install:
        name: pip install ansible
        requirements_file: ""
        packages_list: "ansible==1.3.4"

    - script:
        name: Create /etc/ansible
        code: |
          sudo mkdir -p /etc/ansible
          sudo chmod 777 /etc/ansible

    - create-file:
        name: create host file for ansible
        filename: /etc/ansible/hosts
        content: $TARGET_MACHINE
        overwrite: true

    - script:
        name: Rsync source files
        code: |
          rsync -avz --rsh="ssh -i $PRIVATEKEY_PATH" `pwd`/* ubuntu@$TARGET_MACHINE:$REMOTE_SOURCE_DIR
    # - virtualenv
    - script:
        name: run ansible
        code: |
          chmod 400 /home/ubuntu/key.pem
          cd deployment
          ansible-playbook site.yml --private-key=/home/ubuntu/key.pem -vvvv --extra-vars "source_location=$REMOTE_SOURCE_DIR source_location_auto_remove=true"
