box: wercker/python
services:
  - mies/postgis@0.0.5

# Build definition
build:
  # The steps that will be executed on build
  steps:
    - script:
        name: Check environment variables...
        code: |
          export WERCKER_POSTGRESQL_URL="postgis://postgres:wercker@$WERCKER_POSTGRESQL_HOST:5432/werckerdb1"

    - install-packages:
        packages: postgresql-9.3-postgis

    - virtualenv:
        python_location: /usr/bin/python3.2

    - pip-install
    - script:
        name: run django tests
        code: |
          python manage.py test

deploy:
  steps:
    - add-to-known_hosts:
        hostname: $TARGET_MACHINE
    - mktemp:
        envvar: PRIVATEKEY_PATH
    - create-file:
        name: write key
        filename: $PRIVATEKEY_PATH
        content: $PEM_FILE_CONTENT
        overwrite: true
    - create-file:
        name: write key
        filename: /home/ubuntu/key.pem
        content: $PEM_FILE_CONTENT
        overwrite: true
    - pip-install:
        name: pip install ansible
        requirements_file: ""
        packages_list: "ansible==1.3.4"
    - create-file:
        name: create host file for ansible
        filename: /etc/ansible/hosts
        content: $TARGET_MACHINE
        overwrite: true
# ~/Downloads/django-micro-instance.pem
    # - add-ssh-key:
       # keyname: $PEM_FILE_CONTENT

    - script:
        name: Rsync source files
        code: |
          # ls -la $PRIVATEKEY_PATH
          # scp -i $PRIVATEKEY_PATH -v `pwd`/* ubuntu@$TARGET_MACHINE:/tmp
          rsync -avz --rsh="ssh -i $PRIVATEKEY_PATH" `pwd`/* ubuntu@$TARGET_MACHINE:$REMOTE_SOURCE_DIR
          ssh -i $PRIVATEKEY_PATH -l ubuntu $TARGET_MACHINE  "sudo mv $REMOTE_SOURCE_DIR/deployment/host_vars /etc/ansible/"
          # ssh -i $PRIVATEKEY_PATH -l ubuntu $TARGET_MACHINE  "mv $REMOTE_SOURCE_DIR/deployment/host_vars /home/ubuntu"
    # - virtualenv
    - script:
        name: run ansible
        code: |
          # export ANSIBLE_HOSTS=/home/ubuntu/hosts
          # cat /home/ubuntu/hosts
          chmod 400 /home/ubuntu/key.pem
          pip freeze
          # ansible-playbook --version
          # ansible --private-key=$PRIVATEKEY_PATH -m `pwd`/deployment/site.yml all
          # ansible-playbook deployment/site.yml -i deployment/hosts
          cd deployment
          ansible-playbook site.yml --private-key=/home/ubuntu/key.pem -vvvv
          # ansible-playbook site.yml -i /home/ubuntu/hosts --private-key=/home/ubuntu/key.pem -vvvv
